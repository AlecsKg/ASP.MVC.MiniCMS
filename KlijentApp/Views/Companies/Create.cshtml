@model KlijentApp.Models.Company

@{
    ViewBag.Title = PrevodSrb.Kreiraj_novi ;
}

<h2>@PrevodSrb.Kreiraj_novi</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@PrevodSrb.Firma </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyDescription, "", new { @class = "text-danger" })
            </div>
        </div>

   

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfDocTypesOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfDocTypesOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfDocTypesOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XmlOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.XmlOut)
                    @Html.ValidationMessageFor(model => model.XmlOut, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PdfOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PdfOut)
                    @Html.ValidationMessageFor(model => model.PdfOut, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OtherFormatOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OtherFormatOut)
                    @Html.ValidationMessageFor(model => model.OtherFormatOut, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfDocTypesIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfDocTypesIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfDocTypesIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XmlIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.XmlIn)
                    @Html.ValidationMessageFor(model => model.XmlIn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PdfIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PdfIn)
                    @Html.ValidationMessageFor(model => model.PdfIn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherFormatIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OtherFormatIn)
                    @Html.ValidationMessageFor(model => model.OtherFormatIn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
      

        <div class="form-group">
            @Html.LabelFor(model => model.NeededConversion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.NeededConversion)
                    @Html.ValidationMessageFor(model => model.NeededConversion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
     
        
        <div class="form-group">
            @Html.LabelFor(model => model.Mod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mod, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RefNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefNumber, "", new { @class = "text-danger" })
            </div>
        </div>
      <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@PrevodSrb.Kreiraj_novi class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(PrevodSrb.Nazad_na_listu , "Index")
</div>
